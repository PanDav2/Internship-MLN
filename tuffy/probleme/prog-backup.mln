*HasMeanWord(p,q)
//*PhrasesDepOne(p,q)
HasPhrase(p)
HasResource(p,q)
HasRelation(p,q,r!)
PhraseIndex(p,i,j)
PhrasePosTag(p,pt)
PhraseDepTag(p,q,dt)
PriorMatchScore(p,r,s)
IsTypeCompatible(p,q,rr)
HasQueryResult(s,p,o,rr1,rr2)
HasRelatedness(p,q,s)
Overlap(s1,e1,s2,e2)
ResourceType(r,rt)

//h1
!HasPhrase(p) v HasResource(p,v22).
//h2
!HasResource(p,v23) v HasPhrase(p).
//h3
//!HasResource(p,v18) v !HasResource(p,v19)  v v18 = v19.
//h4
HasPhrase(p) v !HasResource(p,r).
//h5
!HasResource(v24,r) v HasRelation(r,v1,v2) v HasRelation(v3,r,v4).
//h6
//!HasRelation(r1,r2,v20) v !HasRelation(r1,r2,v21) v v20=v21.
//h7
!HasRelation(r1,r2,v5) v HasResource(v6,r1) v HasResource(v7,r2).
//h8
!PhraseIndex(p1,s1,e1) v !PhraseIndex(p2,s2,e2) v !Overlap(s1,e1,s2,e2) v !HasPhrase(p1) v !HasPhrase(p2).
//h9
!ResourceType(r,Entity) v !HasRelation(r,v8,"2_1") v !HasRelation(r,v9,"2_2").
//h10
!ResourceType(r,Entity) v !HasRelation(v25,r,"2_1") v !HasRelation(r,v10,"2_2").
//h11
!ResourceType(r,Class) v !HasRelation(r,v11,"2_1") v !HasRelation(r,v12,"2_2").
//h12
!ResourceType(r,Class) v !HasRelation(v13,r,"2_1") v !HasRelation(r,v14,"2_2").
//h13
IsTypeCompatible(r1,r2,rr) v !HasRelation(r1,r2,rr).
//SOFT CONSTRAINTS FORMULAS
1 PriorMatchScore(p,r,s) => HasPhrase(p)
1 PriorMatchScore(p,r,s) => HasResource(p,r)
1 PhrasePosTag(p,pt), ResourceType(r,rt)  => HasResource(p,r)
1 PhraseDepTag(p1,p2,dp), HasResource(p1,r1), HasResource(p2,r2)  => HasRelation(r1,r2,rr)
1 PhraseDepTag(p1,p2,dp), HasResource(p1,r1), HasResource(p2,r2), !HasMeanWord(p1,p2) => HasRelation(r4,r2,rr)
1 HasRelatedness(r1,r2,s), HasResource(v15,r1), HasResource(v16,r2)  => HasRelation(r1,r2,v17)
1 !HasQueryResult(r1,r2,r3,rr1,rr2) v HasRelation(r1,r2,rr1) HasRelation(r2,r3,rr2)
